{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web3Project\\\\web3.0\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injected } from \"../lib/connectors\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"../components/product/Card\";\nimport ToggleMenu from \"../components/ToggleMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _chainIds$chainId, _chainIds$chainId2;\n  const [balance, setBalance] = useState(\"\"); // 토큰\n\n  // 사용자가 연결된 네트워크를 id가 아닌 name 또는 symbol로 보여주기 위한 배열\n  const chainIds = {\n    1: {\n      name: \"Ethereum mainnet\",\n      symbol: \"ETH\"\n    },\n    3: {\n      name: \"Ropsten\",\n      symbol: \"RopstenETH\"\n    },\n    4: {\n      name: \"Rinkeby\",\n      symbol: \"RinkebyETH\"\n    },\n    5: {\n      name: \"Goerli\",\n      symbol: \"GoerliETH\"\n    },\n    42: {\n      name: \"Kovan\",\n      symbol: \"KovanETH\"\n    },\n    11155111: {\n      name: \"Sepolia\",\n      symbol: \"SepoliaETH\"\n    },\n    56: {\n      name: \"Binance Smart Chain Mainnet\",\n      symbol: \"BNB\"\n    },\n    97: {\n      name: \"Binance Smart Chain Testnet\",\n      symbol: \"tBNB\"\n    },\n    43114: {\n      name: \"Avalanche C-Chain\",\n      symbol: \"AVAX\"\n    },\n    137: {\n      name: \"Polygon Mainnet\",\n      symbol: \"MATIC\"\n    },\n    80001: {\n      name: \"Mumbai\",\n      symbol: \"MATIC\"\n    },\n    42161: {\n      name: \"Arbitrum One\",\n      symbol: \"ETH\"\n    },\n    10: {\n      name: \"Optimism\",\n      symbol: \"ETH\"\n    },\n    250: {\n      name: \"Fantom Opera\",\n      symbol: \"FTM\"\n    },\n    8217: {\n      name: \"Klaytn Mainnet Cypress\",\n      symbol: \"KLAY\"\n    },\n    1001: {\n      name: \"baobob\",\n      symbol: \"KLAY\"\n    },\n    61: {\n      name: \"Ethereum Classic Mainnet\",\n      symbol: \"ETC\"\n    }\n  };\n\n  /* web3 react에서 제공하는 함수와 변수들\r\n        connector: 현재 dapp에 연결된 월렛의 connector 값\r\n        library: web3 provider 제공\r\n        chainId: dapp에 연결된 account의 chainId\r\n        account: dapp에 연결된 account address\r\n        active: dapp 유저가 로그인 된 상태인지 체크\r\n        activate: dapp 월렛 연결 기능 수행함수\r\n        deactivate: dapp 월렛 해제 수행함수\r\n    */\n  const {\n    chainId,\n    account,\n    library,\n    active,\n    activate,\n    deactivate\n  } = useWeb3React();\n  console.log(injected);\n\n  // 연결 버튼 눌렀을 때 대준 내 목소리가 들려??\n  const handdleConnect = () => {\n    // 만약 이미 연결 돼있으면 연결 해제\n    if (active) {\n      deactivate();\n      return;\n    }\n\n    // 메타마스크 계정\n    activate(injected, error => {\n      // 크롬 익스텐션 없을 경우 오류 핸들링\n      if (\"/No Ethereum provider was found on window.ethereum/\".test(error)) {\n        window.open(\"https://metamask.io/download.html\");\n      }\n    });\n  };\n  useEffect(() => {\n    // 계정 연결 됐으면\n    if (account) {\n      // 계정에 연결된 네트워크 코인 가져오기\n      library === null || library === void 0 ? void 0 : library.getBalance(account).then(result => {\n        setBalance(result._hex / 10 ** 18); // 16진수로 보기 힘들게 나와서 바꿔주기\n        console.log(\"result : \", result);\n      });\n    }\n  }, [account]);\n  const testProductList = {\n    code: 200,\n    message: \"\",\n    data: {\n      items: [{\n        itemId: 100111,\n        name: \"이쁜 옷1\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }, {\n        itemId: 100112,\n        name: \"이쁜 옷2\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }, {\n        itemId: 100113,\n        name: \"이쁜 옷3\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }, {\n        itemId: 100114,\n        name: \"이쁜 옷3\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }, {\n        itemId: 200115,\n        name: \"이쁜 옷3\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }, {\n        itemId: 300110,\n        name: \"이쁜 옷3\",\n        image1: \"image1\",\n        price: 100,\n        rate: 3.4,\n        reviewCount: 10,\n        remaining: 9\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ChainId: \", (_chainIds$chainId = chainIds[chainId]) === null || _chainIds$chainId === void 0 ? void 0 : _chainIds$chainId.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance : \", active ? balance + \" \" + ((_chainIds$chainId2 = chainIds[chainId]) === null || _chainIds$chainId2 === void 0 ? void 0 : _chainIds$chainId2.symbol) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handdleConnect,\n        children: active ? \"disconnect\" : \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: testProductList.data.items.map(product => /*#__PURE__*/_jsxDEV(Card, {\n        product: product\n      }, product.itemId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .card-list {\n          display: grid;\n          grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n          grid-template-rows: 1fr 1fr 1fr;\n          grid-gap: 20px;\n          width: 960px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fqZkHJIUmQIURlg239kv6cbAfKE=\", false, function () {\n  return [useWeb3React];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useWeb3React","injected","useEffect","useState","Card","ToggleMenu","jsxDEV","_jsxDEV","Home","_s","_chainIds$chainId","_chainIds$chainId2","balance","setBalance","chainIds","name","symbol","chainId","account","library","active","activate","deactivate","console","log","handdleConnect","error","test","window","open","getBalance","then","result","_hex","testProductList","code","message","data","items","itemId","image1","price","rate","reviewCount","remaining","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","className","map","product","jsx","_c","$RefreshReg$"],"sources":["C:/Web3Project/web3.0/src/pages/Home.js"],"sourcesContent":["import { useWeb3React } from \"@web3-react/core\";\r\nimport { injected } from \"../lib/connectors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"../components/product/Card\";\r\nimport ToggleMenu from \"../components/ToggleMenu\";\r\n\r\nconst Home = () => {\r\n  const [balance, setBalance] = useState(\"\"); // 토큰\r\n\r\n  // 사용자가 연결된 네트워크를 id가 아닌 name 또는 symbol로 보여주기 위한 배열\r\n  const chainIds = {\r\n    1: { name: \"Ethereum mainnet\", symbol: \"ETH\" },\r\n    3: { name: \"Ropsten\", symbol: \"RopstenETH\" },\r\n    4: { name: \"Rinkeby\", symbol: \"RinkebyETH\" },\r\n    5: { name: \"Goerli\", symbol: \"GoerliETH\" },\r\n    42: { name: \"Kovan\", symbol: \"KovanETH\" },\r\n    11155111: { name: \"Sepolia\", symbol: \"SepoliaETH\" },\r\n    56: { name: \"Binance Smart Chain Mainnet\", symbol: \"BNB\" },\r\n    97: { name: \"Binance Smart Chain Testnet\", symbol: \"tBNB\" },\r\n    43114: { name: \"Avalanche C-Chain\", symbol: \"AVAX\" },\r\n    137: { name: \"Polygon Mainnet\", symbol: \"MATIC\" },\r\n    80001: { name: \"Mumbai\", symbol: \"MATIC\" },\r\n    42161: { name: \"Arbitrum One\", symbol: \"ETH\" },\r\n    10: { name: \"Optimism\", symbol: \"ETH\" },\r\n    250: { name: \"Fantom Opera\", symbol: \"FTM\" },\r\n    8217: { name: \"Klaytn Mainnet Cypress\", symbol: \"KLAY\" },\r\n    1001: { name: \"baobob\", symbol: \"KLAY\" },\r\n    61: { name: \"Ethereum Classic Mainnet\", symbol: \"ETC\" },\r\n  };\r\n\r\n  /* web3 react에서 제공하는 함수와 변수들\r\n        connector: 현재 dapp에 연결된 월렛의 connector 값\r\n        library: web3 provider 제공\r\n        chainId: dapp에 연결된 account의 chainId\r\n        account: dapp에 연결된 account address\r\n        active: dapp 유저가 로그인 된 상태인지 체크\r\n        activate: dapp 월렛 연결 기능 수행함수\r\n        deactivate: dapp 월렛 해제 수행함수\r\n    */\r\n  const { chainId, account, library, active, activate, deactivate } =\r\n    useWeb3React();\r\n  console.log(injected);\r\n\r\n  // 연결 버튼 눌렀을 때 대준 내 목소리가 들려??\r\n  const handdleConnect = () => {\r\n    // 만약 이미 연결 돼있으면 연결 해제\r\n    if (active) {\r\n      deactivate();\r\n      return;\r\n    }\r\n\r\n    // 메타마스크 계정\r\n    activate(injected, (error) => {\r\n      // 크롬 익스텐션 없을 경우 오류 핸들링\r\n      if (\"/No Ethereum provider was found on window.ethereum/\".test(error)) {\r\n        window.open(\"https://metamask.io/download.html\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 계정 연결 됐으면\r\n    if (account) {\r\n      // 계정에 연결된 네트워크 코인 가져오기\r\n      library?.getBalance(account).then((result) => {\r\n        setBalance(result._hex / 10 ** 18); // 16진수로 보기 힘들게 나와서 바꿔주기\r\n        console.log(\"result : \", result);\r\n      });\r\n    }\r\n  }, [account]);\r\n\r\n  const testProductList = {\r\n    code: 200,\r\n    message: \"\",\r\n    data: {\r\n      items: [\r\n        {\r\n          itemId: 100111,\r\n          name: \"이쁜 옷1\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100112,\r\n          name: \"이쁜 옷2\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100113,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100114,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 200115,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 300110,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Account: {account}</p>\r\n        <p>ChainId: {chainIds[chainId]?.name}</p>\r\n        <p>\r\n          Balance : {active ? balance + \" \" + chainIds[chainId]?.symbol : \"\"}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={handdleConnect}>\r\n          {active ? \"disconnect\" : \"connect\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"card-list\">\r\n        {testProductList.data.items.map((product) => (\r\n          <Card key={product.itemId} product={product} />\r\n        ))}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .card-list {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n          grid-template-rows: 1fr 1fr 1fr;\r\n          grid-gap: 20px;\r\n          width: 960px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,kBAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMW,QAAQ,GAAG;IACf,CAAC,EAAE;MAAEC,IAAI,EAAE,kBAAkB;MAAEC,MAAM,EAAE;IAAM,CAAC;IAC9C,CAAC,EAAE;MAAED,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAa,CAAC;IAC5C,CAAC,EAAE;MAAED,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAa,CAAC;IAC5C,CAAC,EAAE;MAAED,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAY,CAAC;IAC1C,EAAE,EAAE;MAAED,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAW,CAAC;IACzC,QAAQ,EAAE;MAAED,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAa,CAAC;IACnD,EAAE,EAAE;MAAED,IAAI,EAAE,6BAA6B;MAAEC,MAAM,EAAE;IAAM,CAAC;IAC1D,EAAE,EAAE;MAAED,IAAI,EAAE,6BAA6B;MAAEC,MAAM,EAAE;IAAO,CAAC;IAC3D,KAAK,EAAE;MAAED,IAAI,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAO,CAAC;IACpD,GAAG,EAAE;MAAED,IAAI,EAAE,iBAAiB;MAAEC,MAAM,EAAE;IAAQ,CAAC;IACjD,KAAK,EAAE;MAAED,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAC;IAC1C,KAAK,EAAE;MAAED,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE;IAAM,CAAC;IAC9C,EAAE,EAAE;MAAED,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAM,CAAC;IACvC,GAAG,EAAE;MAAED,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE;IAAM,CAAC;IAC5C,IAAI,EAAE;MAAED,IAAI,EAAE,wBAAwB;MAAEC,MAAM,EAAE;IAAO,CAAC;IACxD,IAAI,EAAE;MAAED,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAC;IACxC,EAAE,EAAE;MAAED,IAAI,EAAE,0BAA0B;MAAEC,MAAM,EAAE;IAAM;EACxD,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,OAAO;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAC/DtB,YAAY,CAAC,CAAC;EAChBuB,OAAO,CAACC,GAAG,CAACvB,QAAQ,CAAC;;EAErB;EACA,MAAMwB,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIL,MAAM,EAAE;MACVE,UAAU,CAAC,CAAC;MACZ;IACF;;IAEA;IACAD,QAAQ,CAACpB,QAAQ,EAAGyB,KAAK,IAAK;MAC5B;MACA,IAAI,qDAAqD,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;QACrEE,MAAM,CAACC,IAAI,CAAC,mCAAmC,CAAC;MAClD;IACF,CAAC,CAAC;EACJ,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd;IACA,IAAIgB,OAAO,EAAE;MACX;MACAC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,UAAU,CAACZ,OAAO,CAAC,CAACa,IAAI,CAAEC,MAAM,IAAK;QAC5CnB,UAAU,CAACmB,MAAM,CAACC,IAAI,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACpCV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEQ,MAAM,CAAC;MAClC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;EAEb,MAAMgB,eAAe,GAAG;IACtBC,IAAI,EAAE,GAAG;IACTC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;MACJC,KAAK,EAAE,CACL;QACEC,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,EACD;QACEL,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,EACD;QACEL,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,EACD;QACEL,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,EACD;QACEL,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,EACD;QACEL,MAAM,EAAE,MAAM;QACdxB,IAAI,EAAE,OAAO;QACbyB,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,GAAG;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC;IAEL;EACF,CAAC;EAED,oBACErC,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,GAAG,WAAS,EAAC3B,OAAO;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB1C,OAAA;QAAAsC,QAAA,GAAG,WAAS,GAAAnC,iBAAA,GAACI,QAAQ,CAACG,OAAO,CAAC,cAAAP,iBAAA,uBAAjBA,iBAAA,CAAmBK,IAAI;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzC1C,OAAA;QAAAsC,QAAA,GAAG,YACS,EAACzB,MAAM,GAAGR,OAAO,GAAG,GAAG,KAAAD,kBAAA,GAAGG,QAAQ,CAACG,OAAO,CAAC,cAAAN,kBAAA,uBAAjBA,kBAAA,CAAmBK,MAAM,IAAG,EAAE;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN1C,OAAA;MAAAsC,QAAA,eACEtC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE1B,cAAe;QAAAoB,QAAA,EAC3CzB,MAAM,GAAG,YAAY,GAAG;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1C,OAAA;MAAK6C,SAAS,EAAC,WAAW;MAAAP,QAAA,EACvBX,eAAe,CAACG,IAAI,CAACC,KAAK,CAACe,GAAG,CAAEC,OAAO,iBACtC/C,OAAA,CAACH,IAAI;QAAsBkD,OAAO,EAAEA;MAAQ,GAAjCA,OAAO,CAACf,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1C,OAAA;MAAOgD,GAAG;MAAAV,QAAA,EAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACxC,EAAA,CAhKID,IAAI;EAAA,QAkCNR,YAAY;AAAA;AAAAwD,EAAA,GAlCVhD,IAAI;AAkKV,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}