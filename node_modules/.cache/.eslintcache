[{"C:\\Web3Project\\web3.0\\src\\index.js":"1","C:\\Web3Project\\web3.0\\src\\App.js":"2","C:\\Web3Project\\web3.0\\src\\lib\\connectors.js":"3","C:\\Web3Project\\web3.0\\src\\components\\ToggleMenu.jsx":"4","C:\\Web3Project\\web3.0\\src\\components\\product\\card.jsx":"5","C:\\Web3Project\\web3.0\\src\\components\\NavBar.jsx":"6","C:\\Web3Project\\web3.0\\src\\components\\product\\Card.jsx":"7","C:\\Web3Project\\web3.0\\src\\pages\\ProductForm.jsx":"8","C:\\Web3Project\\web3.0\\src\\pages\\Home.jsx":"9","C:\\Web3Project\\web3.0\\src\\components\\SearchBar.jsx":"10"},{"size":806,"mtime":1693720415106,"results":"11","hashOfConfig":"12"},{"size":535,"mtime":1693752126539,"results":"13","hashOfConfig":"12"},{"size":311,"mtime":1693720415106,"results":"14","hashOfConfig":"12"},{"size":4100,"mtime":1693881201815,"results":"15","hashOfConfig":"12"},{"size":2219,"mtime":1693746735740,"results":"16","hashOfConfig":"12"},{"size":393,"mtime":1693889435066,"results":"17","hashOfConfig":"12"},{"size":2526,"mtime":1693806502002,"results":"18","hashOfConfig":"12"},{"size":5638,"mtime":1693828171486,"results":"19","hashOfConfig":"12"},{"size":5041,"mtime":1693828171486,"results":"20","hashOfConfig":"12"},{"size":348,"mtime":1693889568498,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"4u8ddc",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"25"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Web3Project\\web3.0\\src\\index.js",[],[],[],"C:\\Web3Project\\web3.0\\src\\App.js",[],[],"C:\\Web3Project\\web3.0\\src\\lib\\connectors.js",[],[],"C:\\Web3Project\\web3.0\\src\\components\\ToggleMenu.jsx",["57","58","59"],[],"C:\\Web3Project\\web3.0\\src\\components\\product\\card.jsx",["60"],[],"import { useState } from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport \"../css/Card.css\";\r\n\r\nconst Card = ({ product }) => {\r\n  const [rating, setRating] = useState(product.rate); // 별점 상태 저장\r\n\r\n  // 상품 카드 클릭했을때 함수 (상품 상세 페이지로 넘어갈 예정)\r\n  const onClickCard = () => {\r\n    console.log(product.itemId + \" 상품 카드 클릭\");\r\n  };\r\n\r\n  // 별점 변경하는 함수 (여기선 안 필요하고 사용자가 리뷰 남길 때 사용할 예정)\r\n  const handleRatingChange = (newRating) => {\r\n    setRating(newRating); // rating 업데이트\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-box\" onClick={onClickCard}>\r\n        <div className=\"img\">\r\n          <img src=\"https://cdn.discordapp.com/attachments/1136307485398007878/1147779261319618560/facebook.png\"></img>\r\n        </div>\r\n        <div className=\"content-box\">\r\n          <span className=\"title\">{product.name}</span>\r\n          <span className=\"price\">{product.price}원</span>\r\n          <span className=\"rate\">\r\n            <StarRatings\r\n              rating={rating} // 현재 별점 값\r\n              starRatedColor=\"#FFB800\" // 별점 색상 설정\r\n              changeRating={handleRatingChange} // 별점이 변경될 때 호출되는 콜백 함수\r\n              numberOfStars={5} // 별점의 총 개수 설정\r\n              name=\"rating\" // 이름 설정\r\n              starDimension=\"12px\" // 별 크기\r\n              starSpacing=\"1px\" // 별들의 간격\r\n              //뚠뚠이 귀여운 별 svg\r\n              svgIconPath=\"M5.35626 0.399536L3.89159 3.36925L0.614589 3.84701C0.0269265 3.93224 -0.208587 4.65673 0.21758 5.07168L2.58842 7.38195L2.02767 10.6455C1.92674 11.2354 2.54804 11.6773 3.06842 11.4014L6 9.86045L8.93159 11.4014C9.45196 11.675 10.0733 11.2354 9.97233 10.6455L9.41158 7.38195L11.7824 5.07168C12.2086 4.65673 11.9731 3.93224 11.3854 3.84701L8.10841 3.36925L6.64374 0.399536C6.38131 -0.129809 5.62094 -0.136538 5.35626 0.399536Z\"\r\n              svgIconViewBox=\"0 0 12 12\"\r\n            />\r\n            <span>({product.reviewCount})</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",[],"C:\\Web3Project\\web3.0\\src\\components\\NavBar.jsx",[],[],"C:\\Web3Project\\web3.0\\src\\components\\product\\Card.jsx",["61"],[],"import { useState } from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport \"../../css/Card.css\";\r\n\r\nconst Card = ({ product }) => {\r\n    const [rating, setRating] = useState(product.rate); // 별점 상태 저장\r\n\r\n    // 상품 카드 클릭했을때 함수 (상품 상세 페이지로 넘어갈 예정)\r\n    const onClickCard = () => {\r\n        console.log(product.itemId + \" 상품 카드 클릭\");\r\n    };\r\n\r\n    // 별점 변경하는 함수 (여기선 안 필요하고 사용자가 리뷰 남길 때 사용할 예정)\r\n    const handleRatingChange = (newRating) => {\r\n        setRating(newRating); // rating 업데이트\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-box\" onClick={onClickCard}>\r\n                <div className=\"img\">\r\n                    <img src=\"https://cdn.discordapp.com/attachments/1136307485398007878/1147779261319618560/facebook.png\"></img>\r\n                </div>\r\n                <div className=\"content-box\">\r\n                    <span className=\"title\">{product.name}</span>\r\n                    <span className=\"price\">{product.price}원</span>\r\n                    <span className=\"rate\">\r\n                        <StarRatings\r\n                            rating={rating} // 현재 별점 값\r\n                            starRatedColor=\"#FFB800\" // 별점 색상 설정\r\n                            changeRating={handleRatingChange} // 별점이 변경될 때 호출되는 콜백 함수\r\n                            numberOfStars={5} // 별점의 총 개수 설정\r\n                            name=\"rating\" // 이름 설정\r\n                            starDimension=\"12px\" // 별 크기\r\n                            starSpacing=\"1px\" // 별들의 간격\r\n                            //뚠뚠이 귀여운 별 svg\r\n                            svgIconPath=\"M5.35626 0.399536L3.89159 3.36925L0.614589 3.84701C0.0269265 3.93224 -0.208587 4.65673 0.21758 5.07168L2.58842 7.38195L2.02767 10.6455C1.92674 11.2354 2.54804 11.6773 3.06842 11.4014L6 9.86045L8.93159 11.4014C9.45196 11.675 10.0733 11.2354 9.97233 10.6455L9.41158 7.38195L11.7824 5.07168C12.2086 4.65673 11.9731 3.93224 11.3854 3.84701L8.10841 3.36925L6.64374 0.399536C6.38131 -0.129809 5.62094 -0.136538 5.35626 0.399536Z\"\r\n                            svgIconViewBox=\"0 0 12 12\"\r\n                        />\r\n                        <span>({product.reviewCount})</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Web3Project\\web3.0\\src\\pages\\ProductForm.jsx",[],[],"C:\\Web3Project\\web3.0\\src\\pages\\Home.jsx",["62"],[],"import { useWeb3React } from \"@web3-react/core\";\r\nimport { injected } from \"../lib/connectors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"../components/product/Card\";\r\n\r\nconst Home = () => {\r\n  const [balance, setBalance] = useState(\"\"); // 토큰\r\n\r\n  // 사용자가 연결된 네트워크를 id가 아닌 name 또는 symbol로 보여주기 위한 배열\r\n  const chainIds = {\r\n    1: { name: \"Ethereum mainnet\", symbol: \"ETH\" },\r\n    3: { name: \"Ropsten\", symbol: \"RopstenETH\" },\r\n    4: { name: \"Rinkeby\", symbol: \"RinkebyETH\" },\r\n    5: { name: \"Goerli\", symbol: \"GoerliETH\" },\r\n    42: { name: \"Kovan\", symbol: \"KovanETH\" },\r\n    11155111: { name: \"Sepolia\", symbol: \"SepoliaETH\" },\r\n    56: { name: \"Binance Smart Chain Mainnet\", symbol: \"BNB\" },\r\n    97: { name: \"Binance Smart Chain Testnet\", symbol: \"tBNB\" },\r\n    43114: { name: \"Avalanche C-Chain\", symbol: \"AVAX\" },\r\n    137: { name: \"Polygon Mainnet\", symbol: \"MATIC\" },\r\n    80001: { name: \"Mumbai\", symbol: \"MATIC\" },\r\n    42161: { name: \"Arbitrum One\", symbol: \"ETH\" },\r\n    10: { name: \"Optimism\", symbol: \"ETH\" },\r\n    250: { name: \"Fantom Opera\", symbol: \"FTM\" },\r\n    8217: { name: \"Klaytn Mainnet Cypress\", symbol: \"KLAY\" },\r\n    1001: { name: \"baobob\", symbol: \"KLAY\" },\r\n    61: { name: \"Ethereum Classic Mainnet\", symbol: \"ETC\" },\r\n  };\r\n\r\n  /* web3 react에서 제공하는 함수와 변수들\r\n        connector: 현재 dapp에 연결된 월렛의 connector 값\r\n        library: web3 provider 제공\r\n        chainId: dapp에 연결된 account의 chainId\r\n        account: dapp에 연결된 account address\r\n        active: dapp 유저가 로그인 된 상태인지 체크\r\n        activate: dapp 월렛 연결 기능 수행함수\r\n        deactivate: dapp 월렛 해제 수행함수\r\n    */\r\n  const { chainId, account, library, active, activate, deactivate } =\r\n    useWeb3React();\r\n  console.log(injected);\r\n\r\n  // 연결 버튼 눌렀을 때 대준 내 목소리가 들려??\r\n  const handdleConnect = () => {\r\n    // 만약 이미 연결 돼있으면 연결 해제\r\n    if (active) {\r\n      deactivate();\r\n      return;\r\n    }\r\n\r\n    // 메타마스크 계정\r\n    activate(injected, (error) => {\r\n      // 크롬 익스텐션 없을 경우 오류 핸들링\r\n      if (\"/No Ethereum provider was found on window.ethereum/\".test(error)) {\r\n        window.open(\"https://metamask.io/download.html\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 계정 연결 됐으면\r\n    if (account) {\r\n      // 계정에 연결된 네트워크 코인 가져오기\r\n      library?.getBalance(account).then((result) => {\r\n        setBalance(result._hex / 10 ** 18); // 16진수로 보기 힘들게 나와서 바꿔주기\r\n        console.log(\"result : \", result);\r\n      });\r\n    }\r\n  }, [account]);\r\n\r\n  const testProductList = {\r\n    code: 200,\r\n    message: \"\",\r\n    data: {\r\n      items: [\r\n        {\r\n          itemId: 100111,\r\n          name: \"이쁜 옷1\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100112,\r\n          name: \"이쁜 옷2\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100113,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 100114,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 200115,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n        {\r\n          itemId: 300110,\r\n          name: \"이쁜 옷3\",\r\n          image1: \"image1\",\r\n          price: 100,\r\n          rate: 3.4,\r\n          reviewCount: 10,\r\n          remaining: 9,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Account: {account}</p>\r\n        <p>ChainId: {chainIds[chainId]?.name}</p>\r\n        <p>\r\n          Balance : {active ? balance + \" \" + chainIds[chainId]?.symbol : \"\"}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={handdleConnect}>\r\n          {active ? \"disconnect\" : \"connect\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"card-list\">\r\n        {testProductList.data.items.map((product) => (\r\n          <Card key={product.itemId} product={product} />\r\n        ))}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .card-list {\r\n          display: grid;\r\n          grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n          grid-template-rows: 1fr 1fr 1fr;\r\n          grid-gap: 20px;\r\n          width: 960px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Web3Project\\web3.0\\src\\components\\SearchBar.jsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":79,"column":17,"nodeType":"65","endLine":79,"endColumn":40},{"ruleId":"63","severity":1,"message":"64","line":96,"column":17,"nodeType":"65","endLine":96,"endColumn":40},{"ruleId":"63","severity":1,"message":"64","line":116,"column":17,"nodeType":"65","endLine":116,"endColumn":40},{"ruleId":"66","severity":1,"message":"67","line":22,"column":11,"nodeType":"65","endLine":22,"endColumn":114},{"ruleId":"66","severity":1,"message":"67","line":22,"column":21,"nodeType":"65","endLine":22,"endColumn":124},{"ruleId":"68","severity":1,"message":"69","line":69,"column":6,"nodeType":"70","endLine":69,"endColumn":15,"suggestions":"71"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'library'. Either include it or remove the dependency array.","ArrayExpression",["72"],{"desc":"73","fix":"74"},"Update the dependencies array to be: [account, library]",{"range":"75","text":"76"},[2420,2429],"[account, library]"]